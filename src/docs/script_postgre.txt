--
-- PostgreSQL database dump
--

-- Dumped from database version 15.8
-- Dumped by pg_dump version 17.5

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: public; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA public;


--
-- Name: inicializar_base_datos(); Type: PROCEDURE; Schema: public; Owner: -
--

CREATE PROCEDURE public.inicializar_base_datos()
    LANGUAGE plpgsql
    AS $$

DECLARE

    v_error_msg text;

BEGIN

    -- Iniciar transacci├│n

    BEGIN

        -- Eliminar tablas si existen (en orden inverso por dependencias)

        DROP TABLE IF EXISTS detalle_ingreso CASCADE;

        DROP TABLE IF EXISTS ingresos CASCADE;

        DROP TABLE IF EXISTS log_errores_factura CASCADE;

        DROP TABLE IF EXISTS forma_pago_factura CASCADE;

        DROP TABLE IF EXISTS detalle_factura CASCADE;

        DROP TABLE IF EXISTS factura_electronica CASCADE;

        DROP TABLE IF EXISTS emisor CASCADE;

        DROP TABLE IF EXISTS productos CASCADE;

        DROP TABLE IF EXISTS clientes CASCADE;

        DROP TABLE IF EXISTS accesos CASCADE;

        DROP TABLE IF EXISTS menu CASCADE;

        DROP TABLE IF EXISTS configuracion_sistema CASCADE;

        DROP TABLE IF EXISTS configuracion_sri CASCADE;

        DROP TABLE IF EXISTS usuarios CASCADE;

        DROP TABLE IF EXISTS roles CASCADE;

        DROP TABLE IF EXISTS categorias CASCADE;



        -- Crear tablas

        CREATE TABLE roles (

            id_rol int GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,

            rol varchar(50) NOT NULL,

            estado char(1) NOT NULL DEFAULT 'A',

            fecha_registro timestamp(3) NOT NULL DEFAULT now(),

            CONSTRAINT pk_roles PRIMARY KEY (id_rol)

        );



        CREATE TABLE usuarios (

            id_usuario int GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,

            id_rol int NOT NULL,

            nombre_completo varchar(150) NOT NULL,

            username varchar(50) NOT NULL,

            password varchar(512) NOT NULL,

            estado char(1) NOT NULL DEFAULT 'A',

            fecha_registro timestamp(3) NOT NULL DEFAULT now(),

            CONSTRAINT pk_usuarios PRIMARY KEY (id_usuario),

            CONSTRAINT uq_usuarios_username UNIQUE (username),

            CONSTRAINT fk_usuarios_roles FOREIGN KEY (id_rol) REFERENCES roles (id_rol)

        );



        CREATE TABLE categorias (

            id_categoria int GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,

            nombre varchar(50) NOT NULL,

            estado char(1) NOT NULL DEFAULT 'A',

            fecha_registro timestamp(3) NOT NULL DEFAULT now(),

            CONSTRAINT pk_categorias PRIMARY KEY (id_categoria)

        );



        CREATE TABLE productos (

            id_producto int GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,

            codigo varchar(20) NOT NULL,

            nombre varchar(100) NOT NULL,

            precio_venta decimal(12, 2) NOT NULL,

            stock_actual int NOT NULL,

            iva decimal(5, 2) NOT NULL DEFAULT 0.15,

            id_categoria int NULL,

            estado char(1) NOT NULL DEFAULT 'A',

            fecha_registro timestamp(3) NOT NULL DEFAULT now(),

            CONSTRAINT pk_productos PRIMARY KEY (id_producto),

            CONSTRAINT uq_productos_codigo UNIQUE (codigo),

            CONSTRAINT fk_productos_categorias FOREIGN KEY (id_categoria) REFERENCES categorias (id_categoria)

        );



        CREATE TABLE clientes (

            id_cliente int GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,

            nombre varchar(100) NOT NULL,

            apellido varchar(100) NULL,

            cedula_ruc varchar(20) NOT NULL,

            direccion varchar(300) NULL,

            telefono varchar(15) NULL,

            email varchar(100) NULL,

            estado char(1) NOT NULL DEFAULT 'A',

            fecha_registro timestamp(3) NOT NULL DEFAULT now(),

            CONSTRAINT pk_clientes PRIMARY KEY (id_cliente),

            CONSTRAINT uq_clientes_cedula_ruc UNIQUE (cedula_ruc)

        );



        CREATE TABLE emisor (

            id_emisor int GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,

            ruc char(13) NOT NULL,

            razon_social varchar(300) NOT NULL,

            nombre_comercial varchar(300) NULL,

            direccion varchar(300) NOT NULL,

            codigo_establecimiento char(3) NOT NULL,

            punto_emision char(3) NOT NULL,

            tipo_ambiente char(1) NOT NULL,

            obligado_contabilidad boolean NOT NULL DEFAULT false,

            certificado_path varchar(500) NOT NULL,

            contrasena_certificado varchar(100) NOT NULL,

            logo bytea NULL,

            fecha_registro timestamp(3) NOT NULL DEFAULT now(),

            fecha_vencimiento_certificado date NULL,

            CONSTRAINT pk_emisor PRIMARY KEY (id_emisor),

            CONSTRAINT uq_emisor_ruc UNIQUE (ruc)

        );



        CREATE TABLE factura_electronica (

            id_factura int GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,

            id_emisor int NOT NULL,

            id_cliente int NULL,

            id_usuario int NOT NULL,

            clave_acceso char(49) NOT NULL,

            numero_secuencial char(9) NOT NULL,

            fecha_emision date NOT NULL,

            estado char(1) NOT NULL DEFAULT 'A',

            fecha_autorizacion timestamp(3) NULL,

            xml_autorizado text NULL,

            pdf_path varchar(500) NULL,

            fecha_registro timestamp(3) NOT NULL DEFAULT now(),

            CONSTRAINT pk_factura_electronica PRIMARY KEY (id_factura),

            CONSTRAINT uq_factura_electronica_clave_acceso UNIQUE (clave_acceso),

            CONSTRAINT fk_factura_electronica_clientes FOREIGN KEY (id_cliente) REFERENCES clientes (id_cliente),

            CONSTRAINT fk_factura_electronica_emisor FOREIGN KEY (id_emisor) REFERENCES emisor (id_emisor),

            CONSTRAINT fk_factura_electronica_usuarios FOREIGN KEY (id_usuario) REFERENCES usuarios (id_usuario)

        );



        CREATE TABLE detalle_factura (

            id_detalle int GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,

            id_factura int NOT NULL,

            id_producto int NOT NULL,

            descripcion varchar(300) NOT NULL,

            cantidad decimal(12, 2) NOT NULL,

            precio_unitario decimal(12, 2) NOT NULL,

            subtotal decimal(12, 2) NOT NULL,

            iva decimal(12, 2) NOT NULL,

            total decimal(12, 2) NOT NULL,

            fecha_registro timestamp(3) NOT NULL DEFAULT now(),

            CONSTRAINT pk_detalle_factura PRIMARY KEY (id_detalle),

            CONSTRAINT fk_detalle_factura_factura_electronica FOREIGN KEY (id_factura) REFERENCES factura_electronica (id_factura) ON DELETE CASCADE,

            CONSTRAINT fk_detalle_factura_productos FOREIGN KEY (id_producto) REFERENCES productos (id_producto)

        );



        CREATE TABLE forma_pago_factura (

            id_pago int GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,

            id_factura int NOT NULL,

            forma_pago varchar(50) NOT NULL,

            valor_pago decimal(12, 2) NOT NULL,

            fecha_registro timestamp(3) NOT NULL DEFAULT now(),

            CONSTRAINT pk_forma_pago_factura PRIMARY KEY (id_pago),

            CONSTRAINT fk_forma_pago_factura_factura_electronica FOREIGN KEY (id_factura) REFERENCES factura_electronica (id_factura) ON DELETE CASCADE

        );



        CREATE TABLE log_errores_factura (

            id_error int GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,

            id_factura int NULL,

            descripcion varchar(1000) NOT NULL,

            fecha_error timestamp(3) NOT NULL DEFAULT now(),

            CONSTRAINT pk_log_errores_factura PRIMARY KEY (id_error),

            CONSTRAINT fk_log_errores_factura_factura_electronica FOREIGN KEY (id_factura) REFERENCES factura_electronica (id_factura)

        );



        CREATE TABLE ingresos (

            id_ingreso int GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,

            id_usuario int NOT NULL,

            total decimal(12, 2) NOT NULL,

            fecha timestamp(3) NOT NULL DEFAULT now(),

            estado char(1) NOT NULL DEFAULT 'A',

            CONSTRAINT pk_ingresos PRIMARY KEY (id_ingreso),

            CONSTRAINT fk_ingresos_usuarios FOREIGN KEY (id_usuario) REFERENCES usuarios (id_usuario)

        );



        CREATE TABLE detalle_ingreso (

            id_detalle_ingreso int GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,

            id_ingreso int NOT NULL,

            id_producto int NOT NULL,

            cantidad decimal(12, 2) NOT NULL,

            precio decimal(12, 2) NOT NULL,

            fecha_registro timestamp(3) NOT NULL DEFAULT now(),

            CONSTRAINT pk_detalle_ingreso PRIMARY KEY (id_detalle_ingreso),

            CONSTRAINT fk_detalle_ingreso_ingresos FOREIGN KEY (id_ingreso) REFERENCES ingresos (id_ingreso) ON DELETE CASCADE,

            CONSTRAINT fk_detalle_ingreso_productos FOREIGN KEY (id_producto) REFERENCES productos (id_producto)

        );



        CREATE TABLE menu (

            id_menu int GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,

            nombre varchar(100) NOT NULL,

            url varchar(500) NOT NULL,

            icon varchar(100) NOT NULL,

            estado char(1) NOT NULL DEFAULT 'A',

            fecha_registro timestamp(3) NOT NULL DEFAULT now(),

            CONSTRAINT pk_menu PRIMARY KEY (id_menu)

        );



        CREATE TABLE accesos (

            id_acceso int GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,

            id_menu int NOT NULL,

            id_rol int NOT NULL,

            fecha_registro timestamp(3) NOT NULL DEFAULT now(),

            CONSTRAINT pk_accesos PRIMARY KEY (id_acceso),

            CONSTRAINT fk_accesos_menu FOREIGN KEY (id_menu) REFERENCES menu (id_menu),

            CONSTRAINT fk_accesos_roles FOREIGN KEY (id_rol) REFERENCES roles (id_rol)

        );



        CREATE TABLE configuracion_sistema (

            id_configuracion int GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,

            clave varchar(100) NOT NULL,

            valor varchar(500) NOT NULL,

            descripcion varchar(300) NULL,

            fecha_modificacion timestamp(3) NOT NULL DEFAULT now(),

            CONSTRAINT pk_configuracion_sistema PRIMARY KEY (id_configuracion),

            CONSTRAINT uq_configuracion_sistema_clave UNIQUE (clave)

        );



        CREATE TABLE configuracion_sri (

            id_configuracion int GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,

            url_pruebas varchar(500) NOT NULL,

            url_produccion varchar(500) NOT NULL,

            fecha_vigencia_inicio date NOT NULL,

            fecha_vigencia_fin date NULL,

            descripcion varchar(500) NULL,

            fecha_registro timestamp(3) NOT NULL DEFAULT now(),

            CONSTRAINT pk_configuracion_sri PRIMARY KEY (id_configuracion)

        );



        -- Crear ├¡ndices

        CREATE INDEX ix_accesos_id_menu ON accesos (id_menu ASC);

        CREATE INDEX ix_accesos_id_rol ON accesos (id_rol ASC);

        CREATE INDEX ix_detalle_ingreso_id_ingreso ON detalle_ingreso (id_ingreso ASC);

        CREATE INDEX ix_detalle_ingreso_id_producto ON detalle_ingreso (id_producto ASC);

        CREATE INDEX ix_detalle_factura_id_factura ON detalle_factura (id_factura ASC);

        CREATE INDEX ix_detalle_factura_id_producto ON detalle_factura (id_producto ASC);

        CREATE INDEX ix_factura_electronica_fecha_emision ON factura_electronica (fecha_emision ASC);

        CREATE INDEX ix_factura_electronica_id_cliente ON factura_electronica (id_cliente ASC);

        CREATE INDEX ix_factura_electronica_id_emisor ON factura_electronica (id_emisor ASC);

        CREATE INDEX ix_factura_electronica_id_usuario ON factura_electronica (id_usuario ASC);

        CREATE INDEX ix_forma_pago_factura_id_factura ON forma_pago_factura (id_factura ASC);

        CREATE INDEX ix_ingresos_fecha ON ingresos (fecha ASC);

        CREATE INDEX ix_ingresos_id_usuario ON ingresos (id_usuario ASC);

        CREATE INDEX ix_log_errores_factura_fecha_error ON log_errores_factura (fecha_error ASC);

        CREATE INDEX ix_log_errores_factura_id_factura ON log_errores_factura (id_factura ASC);

        CREATE INDEX ix_productos_id_categoria ON productos (id_categoria ASC);

        CREATE INDEX ix_usuarios_id_rol ON usuarios (id_rol ASC);



        -- Ejecutar el procedimiento para insertar datos de prueba

        CALL insertar_datos_prueba();



        -- Confirmar transacci├│n

        RAISE NOTICE 'Base de datos inicializada correctamente.';

    EXCEPTION WHEN OTHERS THEN

        -- Capturar el mensaje de error

        GET STACKED DIAGNOSTICS v_error_msg = MESSAGE_TEXT;

        -- Hacer rollback de la transacci├│n

        RAISE NOTICE 'Error al inicializar la base de datos: %', v_error_msg;

        RAISE EXCEPTION 'Fallo en la inicializaci├│n: %', v_error_msg;

    END;

END;

$$;


--
-- Name: insertar_datos_prueba(); Type: PROCEDURE; Schema: public; Owner: -
--

CREATE PROCEDURE public.insertar_datos_prueba()
    LANGUAGE plpgsql
    AS $$

BEGIN

    INSERT INTO roles (rol, estado, fecha_registro)

    VALUES 

        ('Administrador', 'A', NOW()),

        ('Vendedor', 'A', NOW()),

        ('Inventario', 'A', NOW());



    INSERT INTO usuarios (id_rol, nombre_completo, username, password, estado, fecha_registro)

    VALUES 

        (1, 'Juan P├®rez', 'juanperez', 'hashedpassword123', 'A', NOW()),

        (2, 'Mar├¡a G├│mez', 'mariagomez', 'hashedpassword456', 'A', NOW()),

        (3, 'Carlos L├│pez', 'carloslopez', 'hashedpassword789', 'A', NOW());



    INSERT INTO categorias (nombre, estado, fecha_registro)

    VALUES 

        ('Electr├│nica', 'A', NOW()),

        ('Ropa', 'A', NOW()),

        ('Alimentos', 'A', NOW());



    INSERT INTO productos (codigo, nombre, precio_venta, stock_actual, iva, id_categoria, estado, fecha_registro)

    VALUES 

        ('PROD001', 'Laptop HP', 799.99, 50, 0.15, 1, 'A', NOW()),

        ('PROD002', 'Camiseta Azul', 19.99, 100, 0.15, 2, 'A', NOW()),

        ('PROD003', 'Arroz 1kg', 1.50, 200, 0.15, 3, 'A', NOW());



    INSERT INTO clientes (nombre, apellido, cedula_ruc, direccion, telefono, email, estado, fecha_registro)

    VALUES 

        ('Ana', 'Rodr├¡guez', '1234567890', 'Av. Principal 123', '0991234567', 'ana@email.com', 'A', NOW()),

        ('Luis', 'Mart├¡nez', '9876543210', 'Calle Secundaria 456', '0997654321', 'luis@email.com', 'A', NOW());



    INSERT INTO emisor (ruc, razon_social, nombre_comercial, direccion, codigo_establecimiento, punto_emision, tipo_ambiente, obligado_contabilidad, certificado_path, contrasena_certificado, logo, fecha_registro, fecha_vencimiento_certificado)

    VALUES 

        ('1234567890001', 'Comercial Syntory S.A.', 'Syntory', 'Av. Central 789', '001', '001', '1', true, 'C:/certificados/syntory.p12', 'mypassword123', NULL, NOW(), '2026-04-19');



    INSERT INTO factura_electronica (id_emisor, id_cliente, id_usuario, clave_acceso, numero_secuencial, fecha_emision, estado, fecha_autorizacion, xml_autorizado, pdf_path, fecha_registro)

    VALUES 

        (1, 1, 1, '01012025011234567890001001001000000000112345678', '000000001', '2025-04-19', 'A', NOW(), NULL, NULL, NOW()),

        (1, 2, 2, '01012025011234567890001001001000000000212345678', '000000002', '2025-04-19', 'A', NOW(), NULL, NULL, NOW());



    -- Valores ajustados para IVA al 15%

    INSERT INTO detalle_factura (id_factura, id_producto, descripcion, cantidad, precio_unitario, subtotal, iva, total, fecha_registro)

    VALUES 

        (1, 1, 'Laptop HP 14 pulgadas', 2, 799.99, 1599.98, 239.997, 1839.977, NOW()),

        (1, 2, 'Camiseta Azul', 3, 19.99, 59.97, 8.9955, 68.9655, NOW()),

        (2, 3, 'Arroz 1kg', 5, 1.50, 7.50, 1.125, 8.625, NOW());



    INSERT INTO forma_pago_factura (id_factura, forma_pago, valor_pago, fecha_registro)

    VALUES 

        (1, 'Efectivo', 1839.977, NOW()),

        (1, 'Tarjeta', 68.9655, NOW()),

        (2, 'Transferencia', 8.625, NOW());



    INSERT INTO log_errores_factura (id_factura, descripcion, fecha_error)

    VALUES 

        (1, 'Error de conexi├│n con el SRI', NOW()),

        (2, 'Clave de acceso inv├ílida', NOW());



    INSERT INTO ingresos (id_usuario, total, fecha, estado)

    VALUES 

        (1, 2000.00, NOW(), 'A'),

        (3, 150.00, NOW(), 'A');



    INSERT INTO detalle_ingreso (id_ingreso, id_producto, cantidad, precio, fecha_registro)

    VALUES 

        (1, 1, 10, 700.00, NOW()),

        (1, 2, 20, 15.00, NOW()),

        (2, 3, 100, 1.20, NOW());



    INSERT INTO menu (nombre, url, icon, estado, fecha_registro)

    VALUES 

        ('Inicio', '/tabs/home', 'home', 'A', NOW()),

        ('Facturas', '/tabs/facturas', 'document', 'A', NOW()),

        ('Inventario', '/tabs/productos', 'cube', 'A', NOW()),

        ('Clientes', '/tabs/clientes', 'people', 'A', NOW());



    INSERT INTO accesos (id_menu, id_rol, fecha_registro)

    VALUES 

        (1, 1, NOW()),

        (2, 1, NOW()),

        (3, 1, NOW()),

        (4, 1, NOW()),

        (1, 2, NOW()),

        (2, 2, NOW()),

        (4, 2, NOW()),

        (1, 3, NOW()),

        (3, 3, NOW());



    INSERT INTO configuracion_sri (url_pruebas, url_produccion, fecha_vigencia_inicio, fecha_vigencia_fin, descripcion, fecha_registro)

    VALUES 

        ('https://celcer.sri.gob.ec/', 'https://cel.sri.gob.ec/', '2025-01-01', '2025-12-31', 'Configuraci├│n SRI 2025', NOW());



    INSERT INTO configuracion_sistema (clave, valor, descripcion, fecha_modificacion)

    VALUES 

        ('MAX_FACTURAS_DIA', '100', 'M├íximo de facturas por d├¡a', NOW()),

        ('IVA_DEFAULT', '0.15', 'Porcentaje de IVA por defecto', NOW());



    RAISE NOTICE 'Datos de prueba insertados correctamente.';

END;

$$;


--
-- Name: limpiar_base_datos(); Type: PROCEDURE; Schema: public; Owner: -
--

CREATE PROCEDURE public.limpiar_base_datos()
    LANGUAGE plpgsql
    AS $$

BEGIN

    SET CONSTRAINTS ALL DEFERRED;



    DELETE FROM detalle_ingreso;

    DELETE FROM ingresos;

    DELETE FROM log_errores_factura;

    DELETE FROM forma_pago_factura;

    DELETE FROM detalle_factura;

    DELETE FROM factura_electronica;

    DELETE FROM emisor;

    DELETE FROM productos;

    DELETE FROM clientes;

    DELETE FROM accesos;

    DELETE FROM menu;

    DELETE FROM configuracion_sistema;

    DELETE FROM configuracion_sri;

    DELETE FROM usuarios;

    DELETE FROM roles;

    DELETE FROM categorias;



    ALTER SEQUENCE detalle_ingreso_id_detalle_ingreso_seq RESTART WITH 1;

    ALTER SEQUENCE ingresos_id_ingreso_seq RESTART WITH 1;

    ALTER SEQUENCE log_errores_factura_id_error_seq RESTART WITH 1;

    ALTER SEQUENCE forma_pago_factura_id_pago_seq RESTART WITH 1;

    ALTER SEQUENCE detalle_factura_id_detalle_seq RESTART WITH 1;

    ALTER SEQUENCE factura_electronica_id_factura_seq RESTART WITH 1;

    ALTER SEQUENCE emisor_id_emisor_seq RESTART WITH 1;

    ALTER SEQUENCE productos_id_producto_seq RESTART WITH 1;

    ALTER SEQUENCE clientes_id_cliente_seq RESTART WITH 1;

    ALTER SEQUENCE accesos_id_acceso_seq RESTART WITH 1;

    ALTER SEQUENCE menu_id_menu_seq RESTART WITH 1;

    ALTER SEQUENCE configuracion_sistema_id_configuracion_seq RESTART WITH 1;

    ALTER SEQUENCE configuracion_sri_id_configuracion_seq RESTART WITH 1;

    ALTER SEQUENCE usuarios_id_usuario_seq RESTART WITH 1;

    ALTER SEQUENCE roles_id_rol_seq RESTART WITH 1;

    ALTER SEQUENCE categorias_id_categoria_seq RESTART WITH 1;



    RAISE NOTICE 'Base de datos limpiada correctamente. Todos los contadores IDENTITY han sido reiniciados.';

END;

$$;


--
-- Name: obtener_siguiente_secuencial(integer, character); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.obtener_siguiente_secuencial(p_emisor_id integer, p_punto_emision character) RETURNS TABLE(siguiente_secuencial character, mensaje character varying)
    LANGUAGE plpgsql
    AS $$

DECLARE

    v_ultimo_secuencial CHAR(9);

    v_facturas_hoy INT;

    v_limite_diario INT;

    v_certificado_vigente BOOLEAN;

BEGIN

    -- Verificar que el punto_emision coincida con el del emisor

    IF NOT EXISTS (

        SELECT 1 FROM emisor 

        WHERE id_emisor = p_emisor_id 

        AND punto_emision = p_punto_emision

    ) THEN

        RETURN QUERY

        SELECT '000000000'::CHAR(9),

               'El punto de emisi├│n no corresponde al emisor'::VARCHAR;

        RETURN;

    END IF;



    -- Verificar vigencia del certificado

    SELECT CURRENT_DATE <= fecha_vencimiento_certificado

    INTO v_certificado_vigente

    FROM emisor

    WHERE id_emisor = p_emisor_id;



    IF NOT v_certificado_vigente THEN

        RETURN QUERY

        SELECT '000000000'::CHAR(9),

               'El certificado digital ha expirado'::VARCHAR;

        RETURN;

    END IF;



    -- Obtener l├¡mite diario de configuraci├│n

    SELECT CAST(valor AS INTEGER)

    INTO v_limite_diario

    FROM configuracion_sistema

    WHERE clave = 'MAX_FACTURAS_DIA';



    -- Si no existe configuraci├│n, usar un valor por defecto

    IF v_limite_diario IS NULL THEN

        v_limite_diario := 100; -- valor por defecto

    END IF;



    -- Contar facturas del d├¡a

    SELECT COUNT(*)

    INTO v_facturas_hoy

    FROM factura_electronica

    WHERE id_emisor = p_emisor_id

    AND DATE(fecha_emision) = CURRENT_DATE;



    -- Validar l├¡mite diario

    IF v_facturas_hoy >= v_limite_diario THEN

        RETURN QUERY

        SELECT '000000000'::CHAR(9),

               'Se ha alcanzado el l├¡mite diario de facturas'::VARCHAR;

        RETURN;

    END IF;



    -- Obtener y calcular siguiente secuencial

    SELECT COALESCE(MAX(numero_secuencial), '000000000')

    INTO v_ultimo_secuencial

    FROM factura_electronica

    WHERE id_emisor = p_emisor_id

    AND punto_emision = p_punto_emision;



    -- Importante: convertir expl├¡citamente a CHAR(9)

    RETURN QUERY

    SELECT 

        CAST(LPAD((CAST(v_ultimo_secuencial AS INTEGER) + 1)::TEXT, 9, '0') AS CHAR(9)),

        'OK'::VARCHAR;

END;

$$;


SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: accesos; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.accesos (
    id_acceso integer NOT NULL,
    id_menu integer NOT NULL,
    id_rol integer NOT NULL,
    fecha_registro timestamp(3) without time zone DEFAULT now() NOT NULL
);


--
-- Name: accesos_id_acceso_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.accesos ALTER COLUMN id_acceso ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.accesos_id_acceso_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: categorias; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.categorias (
    id_categoria integer NOT NULL,
    nombre character varying(50) NOT NULL,
    estado character(1) DEFAULT 'A'::bpchar NOT NULL,
    fecha_registro timestamp(3) without time zone DEFAULT now() NOT NULL
);


--
-- Name: categorias_id_categoria_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.categorias ALTER COLUMN id_categoria ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.categorias_id_categoria_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: clientes; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.clientes (
    id_cliente integer NOT NULL,
    nombre character varying(100) NOT NULL,
    apellido character varying(100),
    cedula_ruc character varying(20) NOT NULL,
    direccion character varying(300),
    telefono character varying(15),
    email character varying(100),
    estado character(1) DEFAULT 'A'::bpchar NOT NULL,
    fecha_registro timestamp(3) without time zone DEFAULT now() NOT NULL
);


--
-- Name: clientes_id_cliente_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.clientes ALTER COLUMN id_cliente ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.clientes_id_cliente_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: configuracion_sistema; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.configuracion_sistema (
    id_configuracion integer NOT NULL,
    clave character varying(100) NOT NULL,
    valor character varying(500) NOT NULL,
    descripcion character varying(300),
    fecha_modificacion timestamp(3) without time zone DEFAULT now() NOT NULL
);


--
-- Name: configuracion_sistema_id_configuracion_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.configuracion_sistema ALTER COLUMN id_configuracion ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.configuracion_sistema_id_configuracion_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: configuracion_sri; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.configuracion_sri (
    id_configuracion integer NOT NULL,
    url_pruebas character varying(500) NOT NULL,
    url_produccion character varying(500) NOT NULL,
    fecha_vigencia_inicio date NOT NULL,
    fecha_vigencia_fin date,
    descripcion character varying(500),
    fecha_registro timestamp(3) without time zone DEFAULT now() NOT NULL
);


--
-- Name: configuracion_sri_id_configuracion_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.configuracion_sri ALTER COLUMN id_configuracion ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.configuracion_sri_id_configuracion_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: detalle_factura; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.detalle_factura (
    id_detalle integer NOT NULL,
    id_factura integer NOT NULL,
    id_producto integer NOT NULL,
    descripcion character varying(300) NOT NULL,
    cantidad numeric(12,2) NOT NULL,
    precio_unitario numeric(12,2) NOT NULL,
    subtotal numeric(12,2) NOT NULL,
    iva numeric(12,2) NOT NULL,
    total numeric(12,2) NOT NULL,
    fecha_registro timestamp(3) without time zone DEFAULT now() NOT NULL
);


--
-- Name: detalle_factura_id_detalle_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.detalle_factura ALTER COLUMN id_detalle ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.detalle_factura_id_detalle_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: detalle_ingreso; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.detalle_ingreso (
    id_detalle_ingreso integer NOT NULL,
    id_ingreso integer NOT NULL,
    id_producto integer NOT NULL,
    cantidad numeric(12,2) NOT NULL,
    precio numeric(12,2) NOT NULL,
    fecha_registro timestamp(3) without time zone DEFAULT now() NOT NULL
);


--
-- Name: detalle_ingreso_id_detalle_ingreso_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.detalle_ingreso ALTER COLUMN id_detalle_ingreso ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.detalle_ingreso_id_detalle_ingreso_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: emisor; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.emisor (
    id_emisor integer NOT NULL,
    ruc character(13) NOT NULL,
    razon_social character varying(300) NOT NULL,
    nombre_comercial character varying(300),
    direccion character varying(300) NOT NULL,
    codigo_establecimiento character(3) NOT NULL,
    punto_emision character(3) NOT NULL,
    tipo_ambiente character(1) NOT NULL,
    obligado_contabilidad boolean DEFAULT false NOT NULL,
    certificado_path character varying(500) NOT NULL,
    contrasena_certificado character varying(100) NOT NULL,
    logo bytea,
    fecha_registro timestamp(3) without time zone DEFAULT now() NOT NULL,
    fecha_vencimiento_certificado date
);


--
-- Name: emisor_id_emisor_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.emisor ALTER COLUMN id_emisor ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.emisor_id_emisor_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: factura_electronica; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.factura_electronica (
    id_factura integer NOT NULL,
    id_emisor integer NOT NULL,
    id_cliente integer,
    id_usuario integer NOT NULL,
    clave_acceso character(49) NOT NULL,
    numero_secuencial character(9) NOT NULL,
    fecha_emision date NOT NULL,
    estado character(1) DEFAULT 'A'::bpchar NOT NULL,
    fecha_autorizacion timestamp(3) without time zone,
    xml_autorizado text,
    pdf_path character varying(500),
    fecha_registro timestamp(3) without time zone DEFAULT now() NOT NULL,
    punto_emision character(3) NOT NULL,
    ambiente_sri character varying(10) DEFAULT 'pruebas'::character varying NOT NULL,
    CONSTRAINT factura_electronica_ambiente_sri_check CHECK (((ambiente_sri)::text = ANY ((ARRAY['pruebas'::character varying, 'produccion'::character varying])::text[])))
);


--
-- Name: factura_electronica_id_factura_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.factura_electronica ALTER COLUMN id_factura ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.factura_electronica_id_factura_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: forma_pago_factura; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.forma_pago_factura (
    id_pago integer NOT NULL,
    id_factura integer NOT NULL,
    forma_pago character varying(50) NOT NULL,
    valor_pago numeric(12,2) NOT NULL,
    fecha_registro timestamp(3) without time zone DEFAULT now() NOT NULL
);


--
-- Name: forma_pago_factura_id_pago_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.forma_pago_factura ALTER COLUMN id_pago ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.forma_pago_factura_id_pago_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: ingresos; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.ingresos (
    id_ingreso integer NOT NULL,
    id_usuario integer NOT NULL,
    total numeric(12,2) NOT NULL,
    fecha timestamp(3) without time zone DEFAULT now() NOT NULL,
    estado character(1) DEFAULT 'A'::bpchar NOT NULL
);


--
-- Name: ingresos_id_ingreso_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.ingresos ALTER COLUMN id_ingreso ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.ingresos_id_ingreso_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: log_errores_factura; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.log_errores_factura (
    id_error integer NOT NULL,
    id_factura integer,
    descripcion character varying(1000) NOT NULL,
    fecha_error timestamp(3) without time zone DEFAULT now() NOT NULL
);


--
-- Name: log_errores_factura_id_error_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.log_errores_factura ALTER COLUMN id_error ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.log_errores_factura_id_error_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: menu; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.menu (
    id_menu integer NOT NULL,
    nombre character varying(100) NOT NULL,
    url character varying(500) NOT NULL,
    icon character varying(100) NOT NULL,
    estado character(1) DEFAULT 'A'::bpchar NOT NULL,
    fecha_registro timestamp(3) without time zone DEFAULT now() NOT NULL
);


--
-- Name: menu_id_menu_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.menu ALTER COLUMN id_menu ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.menu_id_menu_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: productos; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.productos (
    id_producto integer NOT NULL,
    codigo character varying(20) NOT NULL,
    nombre character varying(100) NOT NULL,
    precio_venta numeric(12,2) NOT NULL,
    stock_actual integer NOT NULL,
    iva numeric(5,2) DEFAULT 0.15 NOT NULL,
    id_categoria integer,
    estado character(1) DEFAULT 'A'::bpchar NOT NULL,
    fecha_registro timestamp(3) without time zone DEFAULT now() NOT NULL
);


--
-- Name: productos_id_producto_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.productos ALTER COLUMN id_producto ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.productos_id_producto_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: roles; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.roles (
    id_rol integer NOT NULL,
    rol character varying(50) NOT NULL,
    estado character(1) DEFAULT 'A'::bpchar NOT NULL,
    fecha_registro timestamp(3) without time zone DEFAULT now() NOT NULL
);


--
-- Name: roles_id_rol_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.roles ALTER COLUMN id_rol ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.roles_id_rol_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: usuarios; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.usuarios (
    id_usuario integer NOT NULL,
    id_rol integer NOT NULL,
    nombre_completo character varying(150) NOT NULL,
    username character varying(50) NOT NULL,
    password character varying(512) NOT NULL,
    estado character(1) DEFAULT 'A'::bpchar NOT NULL,
    fecha_registro timestamp(3) without time zone DEFAULT now() NOT NULL
);


--
-- Name: usuarios_id_usuario_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.usuarios ALTER COLUMN id_usuario ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.usuarios_id_usuario_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: accesos; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.accesos OVERRIDING SYSTEM VALUE VALUES
	(1, 1, 1, '2025-05-30 16:02:05.184'),
	(2, 2, 1, '2025-05-30 16:02:05.184'),
	(3, 3, 1, '2025-05-30 16:02:05.184'),
	(4, 4, 1, '2025-05-30 16:02:05.184'),
	(5, 1, 2, '2025-05-30 16:02:05.184'),
	(6, 2, 2, '2025-05-30 16:02:05.184'),
	(7, 4, 2, '2025-05-30 16:02:05.184'),
	(8, 1, 3, '2025-05-30 16:02:05.184'),
	(9, 3, 3, '2025-05-30 16:02:05.184');


--
-- Data for Name: categorias; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.categorias OVERRIDING SYSTEM VALUE VALUES
	(1, 'Electr├│nica', 'A', '2025-05-30 16:02:05.184'),
	(2, 'Ropa', 'A', '2025-05-30 16:02:05.184'),
	(3, 'Alimentos', 'A', '2025-05-30 16:02:05.184');


--
-- Data for Name: clientes; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.clientes OVERRIDING SYSTEM VALUE VALUES
	(2, 'Luis', 'Mart├¡nez', '9876543210', 'Calle Secundaria 456', '0997654321', 'luis@email.com', 'A', '2025-05-30 16:02:05.184'),
	(1, 'Ana', 'Rodr├¡guez', '0928017243', 'Av. Principal 123', '0991234567', 'ana@email.com', 'A', '2025-05-30 16:02:05.184');


--
-- Data for Name: configuracion_sistema; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.configuracion_sistema OVERRIDING SYSTEM VALUE VALUES
	(1, 'MAX_FACTURAS_DIA', '100', 'M├íximo de facturas por d├¡a', '2025-05-30 16:02:05.184'),
	(2, 'IVA_DEFAULT', '0.15', 'Porcentaje de IVA por defecto', '2025-05-30 16:02:05.184');


--
-- Data for Name: configuracion_sri; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.configuracion_sri OVERRIDING SYSTEM VALUE VALUES
	(1, 'https://celcer.sri.gob.ec/', 'https://cel.sri.gob.ec/', '2025-01-01', '2025-12-31', 'Configuraci├│n SRI 2025', '2025-05-30 16:02:05.184');


--
-- Data for Name: detalle_factura; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.detalle_factura OVERRIDING SYSTEM VALUE VALUES
	(1, 1, 1, 'Laptop HP 14 pulgadas', 2.00, 799.99, 1599.98, 240.00, 1839.98, '2025-05-30 16:02:05.184'),
	(2, 1, 2, 'Camiseta Azul', 3.00, 19.99, 59.97, 9.00, 68.97, '2025-05-30 16:02:05.184'),
	(3, 2, 3, 'Arroz 1kg', 5.00, 1.50, 7.50, 1.13, 8.63, '2025-05-30 16:02:05.184');


--
-- Data for Name: detalle_ingreso; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.detalle_ingreso OVERRIDING SYSTEM VALUE VALUES
	(1, 1, 1, 10.00, 700.00, '2025-05-30 16:02:05.184'),
	(2, 1, 2, 20.00, 15.00, '2025-05-30 16:02:05.184'),
	(3, 2, 3, 100.00, 1.20, '2025-05-30 16:02:05.184');


--
-- Data for Name: emisor; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.emisor OVERRIDING SYSTEM VALUE VALUES
	(1, '2450646365001', 'KODAKA YAGUAL IMIRSY KHIABET', 'K-TECH', 'SANTA ELENA / LA LIBERTAD / LA LIBERTAD / GUAYAQUIL S/N Y AV 4A	', '002', '100', '1', false, 'C:/certificados/syntory.p12', 'Hmviid1809', NULL, '2022-01-20 00:00:00', '2026-04-19');


--
-- Data for Name: factura_electronica; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.factura_electronica OVERRIDING SYSTEM VALUE VALUES
	(1, 1, 1, 1, '01012025011234567890001001001000000000112345678  ', '000000001', '2025-04-19', 'A', '2025-05-30 16:02:05.184', NULL, NULL, '2025-05-30 16:02:05.184', '001', 'pruebas'),
	(2, 1, 2, 2, '01012025011234567890001001001000000000212345678  ', '000000002', '2025-04-19', 'A', '2025-05-30 16:02:05.184', NULL, NULL, '2025-05-30 16:02:05.184', '001', 'pruebas');


--
-- Data for Name: forma_pago_factura; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.forma_pago_factura OVERRIDING SYSTEM VALUE VALUES
	(1, 1, 'Efectivo', 1839.98, '2025-05-30 16:02:05.184'),
	(2, 1, 'Tarjeta', 68.97, '2025-05-30 16:02:05.184'),
	(3, 2, 'Transferencia', 8.63, '2025-05-30 16:02:05.184');


--
-- Data for Name: ingresos; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.ingresos OVERRIDING SYSTEM VALUE VALUES
	(1, 1, 2000.00, '2025-05-30 16:02:05.184', 'A'),
	(2, 3, 150.00, '2025-05-30 16:02:05.184', 'A');


--
-- Data for Name: log_errores_factura; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.log_errores_factura OVERRIDING SYSTEM VALUE VALUES
	(1, 1, 'Error de conexi├│n con el SRI', '2025-05-30 16:02:05.184'),
	(2, 2, 'Clave de acceso inv├ílida', '2025-05-30 16:02:05.184');


--
-- Data for Name: menu; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.menu OVERRIDING SYSTEM VALUE VALUES
	(1, 'Inicio', '/tabs/home', 'home', 'A', '2025-05-30 16:02:05.184'),
	(2, 'Facturas', '/tabs/facturas', 'document', 'A', '2025-05-30 16:02:05.184'),
	(3, 'Inventario', '/tabs/productos', 'cube', 'A', '2025-05-30 16:02:05.184'),
	(4, 'Clientes', '/tabs/clientes', 'people', 'A', '2025-05-30 16:02:05.184');


--
-- Data for Name: productos; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.productos OVERRIDING SYSTEM VALUE VALUES
	(1, 'PROD001', 'Laptop HP', 799.99, 50, 0.15, 1, 'A', '2025-05-30 16:02:05.184'),
	(2, 'PROD002', 'Camiseta Azul', 19.99, 100, 0.15, 2, 'A', '2025-05-30 16:02:05.184'),
	(3, 'PROD003', 'Arroz 1kg', 1.50, 200, 0.15, 3, 'A', '2025-05-30 16:02:05.184');


--
-- Data for Name: roles; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.roles OVERRIDING SYSTEM VALUE VALUES
	(1, 'Administrador', 'A', '2025-05-30 16:02:05.184'),
	(2, 'Vendedor', 'A', '2025-05-30 16:02:05.184'),
	(3, 'Inventario', 'A', '2025-05-30 16:02:05.184');


--
-- Data for Name: usuarios; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.usuarios OVERRIDING SYSTEM VALUE VALUES
	(1, 1, 'Juan P├®rez', 'juanperez', 'hashedpassword123', 'A', '2025-05-30 16:02:05.184'),
	(2, 2, 'Mar├¡a G├│mez', 'mariagomez', 'hashedpassword456', 'A', '2025-05-30 16:02:05.184'),
	(3, 3, 'Carlos L├│pez', 'carloslopez', 'hashedpassword789', 'A', '2025-05-30 16:02:05.184');


--
-- Name: accesos_id_acceso_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.accesos_id_acceso_seq', 9, true);


--
-- Name: categorias_id_categoria_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.categorias_id_categoria_seq', 3, true);


--
-- Name: clientes_id_cliente_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.clientes_id_cliente_seq', 2, true);


--
-- Name: configuracion_sistema_id_configuracion_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.configuracion_sistema_id_configuracion_seq', 2, true);


--
-- Name: configuracion_sri_id_configuracion_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.configuracion_sri_id_configuracion_seq', 1, true);


--
-- Name: detalle_factura_id_detalle_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.detalle_factura_id_detalle_seq', 3, true);


--
-- Name: detalle_ingreso_id_detalle_ingreso_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.detalle_ingreso_id_detalle_ingreso_seq', 3, true);


--
-- Name: emisor_id_emisor_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.emisor_id_emisor_seq', 1, true);


--
-- Name: factura_electronica_id_factura_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.factura_electronica_id_factura_seq', 3, true);


--
-- Name: forma_pago_factura_id_pago_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.forma_pago_factura_id_pago_seq', 3, true);


--
-- Name: ingresos_id_ingreso_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.ingresos_id_ingreso_seq', 2, true);


--
-- Name: log_errores_factura_id_error_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.log_errores_factura_id_error_seq', 2, true);


--
-- Name: menu_id_menu_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.menu_id_menu_seq', 4, true);


--
-- Name: productos_id_producto_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.productos_id_producto_seq', 3, true);


--
-- Name: roles_id_rol_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.roles_id_rol_seq', 3, true);


--
-- Name: usuarios_id_usuario_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.usuarios_id_usuario_seq', 3, true);


--
-- Name: accesos pk_accesos; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.accesos
    ADD CONSTRAINT pk_accesos PRIMARY KEY (id_acceso);


--
-- Name: categorias pk_categorias; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.categorias
    ADD CONSTRAINT pk_categorias PRIMARY KEY (id_categoria);


--
-- Name: clientes pk_clientes; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.clientes
    ADD CONSTRAINT pk_clientes PRIMARY KEY (id_cliente);


--
-- Name: configuracion_sistema pk_configuracion_sistema; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.configuracion_sistema
    ADD CONSTRAINT pk_configuracion_sistema PRIMARY KEY (id_configuracion);


--
-- Name: configuracion_sri pk_configuracion_sri; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.configuracion_sri
    ADD CONSTRAINT pk_configuracion_sri PRIMARY KEY (id_configuracion);


--
-- Name: detalle_factura pk_detalle_factura; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.detalle_factura
    ADD CONSTRAINT pk_detalle_factura PRIMARY KEY (id_detalle);


--
-- Name: detalle_ingreso pk_detalle_ingreso; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.detalle_ingreso
    ADD CONSTRAINT pk_detalle_ingreso PRIMARY KEY (id_detalle_ingreso);


--
-- Name: emisor pk_emisor; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.emisor
    ADD CONSTRAINT pk_emisor PRIMARY KEY (id_emisor);


--
-- Name: factura_electronica pk_factura_electronica; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.factura_electronica
    ADD CONSTRAINT pk_factura_electronica PRIMARY KEY (id_factura);


--
-- Name: forma_pago_factura pk_forma_pago_factura; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.forma_pago_factura
    ADD CONSTRAINT pk_forma_pago_factura PRIMARY KEY (id_pago);


--
-- Name: ingresos pk_ingresos; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.ingresos
    ADD CONSTRAINT pk_ingresos PRIMARY KEY (id_ingreso);


--
-- Name: log_errores_factura pk_log_errores_factura; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.log_errores_factura
    ADD CONSTRAINT pk_log_errores_factura PRIMARY KEY (id_error);


--
-- Name: menu pk_menu; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.menu
    ADD CONSTRAINT pk_menu PRIMARY KEY (id_menu);


--
-- Name: productos pk_productos; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.productos
    ADD CONSTRAINT pk_productos PRIMARY KEY (id_producto);


--
-- Name: roles pk_roles; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.roles
    ADD CONSTRAINT pk_roles PRIMARY KEY (id_rol);


--
-- Name: usuarios pk_usuarios; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.usuarios
    ADD CONSTRAINT pk_usuarios PRIMARY KEY (id_usuario);


--
-- Name: clientes uq_clientes_cedula_ruc; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.clientes
    ADD CONSTRAINT uq_clientes_cedula_ruc UNIQUE (cedula_ruc);


--
-- Name: configuracion_sistema uq_configuracion_sistema_clave; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.configuracion_sistema
    ADD CONSTRAINT uq_configuracion_sistema_clave UNIQUE (clave);


--
-- Name: emisor uq_emisor_ruc; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.emisor
    ADD CONSTRAINT uq_emisor_ruc UNIQUE (ruc);


--
-- Name: factura_electronica uq_factura_electronica_clave_acceso; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.factura_electronica
    ADD CONSTRAINT uq_factura_electronica_clave_acceso UNIQUE (clave_acceso);


--
-- Name: productos uq_productos_codigo; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.productos
    ADD CONSTRAINT uq_productos_codigo UNIQUE (codigo);


--
-- Name: usuarios uq_usuarios_username; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.usuarios
    ADD CONSTRAINT uq_usuarios_username UNIQUE (username);


--
-- Name: ix_accesos_id_menu; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX ix_accesos_id_menu ON public.accesos USING btree (id_menu);


--
-- Name: ix_accesos_id_rol; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX ix_accesos_id_rol ON public.accesos USING btree (id_rol);


--
-- Name: ix_detalle_factura_id_factura; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX ix_detalle_factura_id_factura ON public.detalle_factura USING btree (id_factura);


--
-- Name: ix_detalle_factura_id_producto; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX ix_detalle_factura_id_producto ON public.detalle_factura USING btree (id_producto);


--
-- Name: ix_detalle_ingreso_id_ingreso; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX ix_detalle_ingreso_id_ingreso ON public.detalle_ingreso USING btree (id_ingreso);


--
-- Name: ix_detalle_ingreso_id_producto; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX ix_detalle_ingreso_id_producto ON public.detalle_ingreso USING btree (id_producto);


--
-- Name: ix_factura_electronica_fecha_emision; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX ix_factura_electronica_fecha_emision ON public.factura_electronica USING btree (fecha_emision);


--
-- Name: ix_factura_electronica_id_cliente; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX ix_factura_electronica_id_cliente ON public.factura_electronica USING btree (id_cliente);


--
-- Name: ix_factura_electronica_id_emisor; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX ix_factura_electronica_id_emisor ON public.factura_electronica USING btree (id_emisor);


--
-- Name: ix_factura_electronica_id_usuario; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX ix_factura_electronica_id_usuario ON public.factura_electronica USING btree (id_usuario);


--
-- Name: ix_forma_pago_factura_id_factura; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX ix_forma_pago_factura_id_factura ON public.forma_pago_factura USING btree (id_factura);


--
-- Name: ix_ingresos_fecha; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX ix_ingresos_fecha ON public.ingresos USING btree (fecha);


--
-- Name: ix_ingresos_id_usuario; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX ix_ingresos_id_usuario ON public.ingresos USING btree (id_usuario);


--
-- Name: ix_log_errores_factura_fecha_error; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX ix_log_errores_factura_fecha_error ON public.log_errores_factura USING btree (fecha_error);


--
-- Name: ix_log_errores_factura_id_factura; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX ix_log_errores_factura_id_factura ON public.log_errores_factura USING btree (id_factura);


--
-- Name: ix_productos_id_categoria; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX ix_productos_id_categoria ON public.productos USING btree (id_categoria);


--
-- Name: ix_usuarios_id_rol; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX ix_usuarios_id_rol ON public.usuarios USING btree (id_rol);


--
-- Name: accesos fk_accesos_menu; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.accesos
    ADD CONSTRAINT fk_accesos_menu FOREIGN KEY (id_menu) REFERENCES public.menu(id_menu);


--
-- Name: accesos fk_accesos_roles; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.accesos
    ADD CONSTRAINT fk_accesos_roles FOREIGN KEY (id_rol) REFERENCES public.roles(id_rol);


--
-- Name: detalle_factura fk_detalle_factura_factura_electronica; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.detalle_factura
    ADD CONSTRAINT fk_detalle_factura_factura_electronica FOREIGN KEY (id_factura) REFERENCES public.factura_electronica(id_factura) ON DELETE CASCADE;


--
-- Name: detalle_factura fk_detalle_factura_productos; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.detalle_factura
    ADD CONSTRAINT fk_detalle_factura_productos FOREIGN KEY (id_producto) REFERENCES public.productos(id_producto);


--
-- Name: detalle_ingreso fk_detalle_ingreso_ingresos; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.detalle_ingreso
    ADD CONSTRAINT fk_detalle_ingreso_ingresos FOREIGN KEY (id_ingreso) REFERENCES public.ingresos(id_ingreso) ON DELETE CASCADE;


--
-- Name: detalle_ingreso fk_detalle_ingreso_productos; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.detalle_ingreso
    ADD CONSTRAINT fk_detalle_ingreso_productos FOREIGN KEY (id_producto) REFERENCES public.productos(id_producto);


--
-- Name: factura_electronica fk_factura_electronica_clientes; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.factura_electronica
    ADD CONSTRAINT fk_factura_electronica_clientes FOREIGN KEY (id_cliente) REFERENCES public.clientes(id_cliente);


--
-- Name: factura_electronica fk_factura_electronica_emisor; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.factura_electronica
    ADD CONSTRAINT fk_factura_electronica_emisor FOREIGN KEY (id_emisor) REFERENCES public.emisor(id_emisor);


--
-- Name: factura_electronica fk_factura_electronica_usuarios; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.factura_electronica
    ADD CONSTRAINT fk_factura_electronica_usuarios FOREIGN KEY (id_usuario) REFERENCES public.usuarios(id_usuario);


--
-- Name: forma_pago_factura fk_forma_pago_factura_factura_electronica; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.forma_pago_factura
    ADD CONSTRAINT fk_forma_pago_factura_factura_electronica FOREIGN KEY (id_factura) REFERENCES public.factura_electronica(id_factura) ON DELETE CASCADE;


--
-- Name: ingresos fk_ingresos_usuarios; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.ingresos
    ADD CONSTRAINT fk_ingresos_usuarios FOREIGN KEY (id_usuario) REFERENCES public.usuarios(id_usuario);


--
-- Name: log_errores_factura fk_log_errores_factura_factura_electronica; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.log_errores_factura
    ADD CONSTRAINT fk_log_errores_factura_factura_electronica FOREIGN KEY (id_factura) REFERENCES public.factura_electronica(id_factura);


--
-- Name: productos fk_productos_categorias; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.productos
    ADD CONSTRAINT fk_productos_categorias FOREIGN KEY (id_categoria) REFERENCES public.categorias(id_categoria);


--
-- Name: usuarios fk_usuarios_roles; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.usuarios
    ADD CONSTRAINT fk_usuarios_roles FOREIGN KEY (id_rol) REFERENCES public.roles(id_rol);


--
-- PostgreSQL database dump complete
--

